{"ast":null,"code":"var _jsxFileName = \"/home/baroni/fullstackopen/osa2/kurssitiedot/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Course = props => {\n  const {\n    courses\n  } = props;\n  const course = courses.parts.map(course => course.parts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Web development curriculum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Course;\nconst Total = props => {\n  const {\n    courses\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n//<b>total of {course.parts.reduce((sum, part) => sum + part.exercises, 0)} exercises</b>\n_c2 = Total;\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Course, {\n      courses: courses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_c3 = App;\nexport default App;\n\n//<Total course={courses} />\n\n/*{courses.map(course =>\n  <div key={course.id}>\n    <h2>{course.name}</h2>\n    {course.parts.map(cours => <p key={cours.id}> {cours.name} {cours.exercises}</p>)}\n  </div>\n  )}*/\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Course\");\n$RefreshReg$(_c2, \"Total\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["Course","props","courses","course","parts","map","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Total","_c2","App","name","id","exercises","_c3","$RefreshReg$"],"sources":["/home/baroni/fullstackopen/osa2/kurssitiedot/src/App.js"],"sourcesContent":["const Course = (props) => {\n  const { courses } = props\n  const course = courses.parts.map(course => course.parts)\n  return (\n    <div>\n      <h1>Web development curriculum</h1>\n    </div>\n  )\n}\n\nconst Total = (props) => {\n  const { courses } = props\n  return (\n    <div>\n      \n    </div>\n  )\n}\n//<b>total of {course.parts.reduce((sum, part) => sum + part.exercises, 0)} exercises</b>\nconst App = () => {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    }, \n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  return (\n    <div>\n      <Course courses={courses} />\n    </div>\n  )\n}\n\nexport default App\n\n//<Total course={courses} />\n\n/*{courses.map(course =>\n  <div key={course.id}>\n    <h2>{course.name}</h2>\n    {course.parts.map(cours => <p key={cours.id}> {cours.name} {cours.exercises}</p>)}\n  </div>\n  )}*/"],"mappings":";;AAAA,MAAMA,MAAM,GAAIC,KAAK,IAAK;EACxB,MAAM;IAAEC;EAAQ,CAAC,GAAGD,KAAK;EACzB,MAAME,MAAM,GAAGD,OAAO,CAACE,KAAK,CAACC,GAAG,CAACF,MAAM,IAAIA,MAAM,CAACC,KAAK,CAAC;EACxD,oBACEE,OAAA;IAAAC,QAAA,eACED,OAAA;MAAAC,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC/B;AAEV,CAAC;AAAAC,EAAA,GARKZ,MAAM;AAUZ,MAAMa,KAAK,GAAIZ,KAAK,IAAK;EACvB,MAAM;IAAEC;EAAQ,CAAC,GAAGD,KAAK;EACzB,oBACEK,OAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEM;AAEV,CAAC;AACD;AAAAG,GAAA,GARMD,KAAK;AASX,MAAME,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMb,OAAO,GAAG,CACd;IACEc,IAAI,EAAE,oCAAoC;IAC1CC,EAAE,EAAE,CAAC;IACLb,KAAK,EAAE,CACL;MACEY,IAAI,EAAE,uBAAuB;MAC7BE,SAAS,EAAE,EAAE;MACbD,EAAE,EAAE;IACN,CAAC,EACD;MACED,IAAI,EAAE,0BAA0B;MAChCE,SAAS,EAAE,CAAC;MACZD,EAAE,EAAE;IACN,CAAC,EACD;MACED,IAAI,EAAE,sBAAsB;MAC5BE,SAAS,EAAE,EAAE;MACbD,EAAE,EAAE;IACN,CAAC,EACD;MACED,IAAI,EAAE,OAAO;MACbE,SAAS,EAAE,EAAE;MACbD,EAAE,EAAE;IACN,CAAC;EAEL,CAAC,EACD;IACED,IAAI,EAAE,SAAS;IACfC,EAAE,EAAE,CAAC;IACLb,KAAK,EAAE,CACL;MACEY,IAAI,EAAE,SAAS;MACfE,SAAS,EAAE,CAAC;MACZD,EAAE,EAAE;IACN,CAAC,EACD;MACED,IAAI,EAAE,aAAa;MACnBE,SAAS,EAAE,CAAC;MACZD,EAAE,EAAE;IACN,CAAC;EAEL,CAAC,CACF;EAED,oBACEX,OAAA;IAAAC,QAAA,eACED,OAAA,CAACN,MAAM;MAACE,OAAO,EAAEA;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxB;AAEV,CAAC;AAAAQ,GAAA,GAnDKJ,GAAG;AAqDT,eAAeA,GAAG;;AAElB;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAAAH,EAAA,EAAAE,GAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}